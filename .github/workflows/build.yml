name: Build

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - 'docs/**'

  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-lint

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          poetry config --list
          poetry install -n -vv --no-root

      - name: Check formatting with black
        run: poetry run black --check mimus

      - name: Lint with pylint
        run: poetry run pylint --rcfile=./.pylintrc --output-format=colorized --reports=y mimus

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [lint]
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        python-version: [3.7, 3.8, 3.9]

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # TODO:
      #   Debug AttributeError: module 'regex' has no attribute 'findall'
      # during installing lark-parser-0.10.1
      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-test-${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          poetry config --list
          poetry install -n -vv

      - name: Run unit tests with coverage
        run: |
          poetry run pytest --cov --cov-report=term-missing

      - name: Run behavioral tests
        run: poetry run behave -v

      - name: Upload coverage to Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.codecovRepoToken }}
        run: |
          poetry run codecov --flags unittest python-$PYTHON_VERSION

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Setup cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-build

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry
          poetry config --list
          poetry install -n -vv

      - name: Build wheel package
        run: poetry build -f wheel -vv

      - name: Upload package
        uses: actions/upload-artifact@v2
        if: github.ref == 'refs/heads/master'
        with:
          name: wheel-package
          path: dist/
